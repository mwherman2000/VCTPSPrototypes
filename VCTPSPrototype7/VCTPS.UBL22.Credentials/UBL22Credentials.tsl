// Trusted Digial Web Project
// Hyperonomy Digital Identity Lab
// Parallelspace Corporation
// (c) Copyright 2021 Parallelspace Corporation. All Rights Reserved

// http://docs.oasis-open.org/ubl/os-UBL-2.1/UBL-2.1.html#T-INVOICE
// http://docs.oasis-open.org/ubl/os-UBL-2.1/xml/UBL-Invoice-2.1-Example.xml
// https://docs.oasis-open.org/ubl/os-UBL-2.3/xml/UBL-Invoice-2.1-Example-Trivial.xml

// Context:
// <Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
//	xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
//	xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
// UBLVersionID: 2.1

include "../VCTPS.Common/BTTGenericCredential.tsl";
include "../VCTPS.UBL22.Common/ISO639-1LanguageCodes.tsl";
include "../VCTPS.UBL22.Common/UBL22CommonBasicComponents.tsl";

//////////////////////////////////////////////////////////////////////////////

struct BTT_Invoice_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_Invoice claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_Invoice_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_Invoice_EnvelopeContent content;
}

struct BTT_Invoice_SealedEnvelope
{
	BTT_Invoice_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}

struct BTT_SalesOrder_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_SalesOrder claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_SalesOrder_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_SalesOrder_EnvelopeContent content;
}

struct BTT_SalesOrder_SealedEnvelope
{
	BTT_SalesOrder_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}

struct BTT_PurchaseOrder_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_PurchaseOrder claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_PurchaseOrder_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_PurchaseOrder_EnvelopeContent content;
}

struct BTT_PurchaseOrder_SealedEnvelope
{
	BTT_PurchaseOrder_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}

struct BTT_DeliveryReceipt_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_TransportEvent claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_DeliveryReceipt_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_DeliveryReceipt_EnvelopeContent content;
}

struct BTT_DeliveryReceipt_SealedEnvelope
{
	BTT_DeliveryReceipt_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}

struct BTT_Waybill_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_Waybill claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_Waybill_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_Waybill_EnvelopeContent content;
}

struct BTT_Waybill_SealedEnvelope
{
	BTT_Waybill_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}

struct BTT_Party_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_Party claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_Party_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_Party_EnvelopeContent content;
}

struct BTT_Party_SealedEnvelope
{
	BTT_Party_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}

struct BTT_Shipment_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_Shipment claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_Shipment_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_Shipment_EnvelopeContent content;
}

struct BTT_Shipment_SealedEnvelope
{
	BTT_Shipment_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}

struct BTT_InvoiceLine_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	Cac_InvoiceLine claims;
	optional BTTEncryptedClaims encryptedclaims;
}

struct BTT_InvoiceLine_Envelope
{
	string udid;
	BTTGenericCredential_PackingLabel label;
	BTT_InvoiceLine_EnvelopeContent content;
}

struct BTT_InvoiceLine_SealedEnvelope
{
	BTT_InvoiceLine_Envelope envelope;
	BTTGenericCredential_EnvelopeSeal envelopeseal;
}