struct Cac_Address
{
	optional string	cbc_ID;
	optional string	cbc_AddressTypeCode;
	optional string	cbc_AddressFormatCode;
	optional string	cbc_Postbox;
	optional string	cbc_Floor;
	optional string	cbc_Room;
	optional string	cbc_StreetName;
	optional string	cbc_AdditionalStreetName;
	optional string	cbc_BlockName;
	optional string	cbc_BuildingName;
	optional string	cbc_BuildingNumber;
	optional string	cbc_InhouseMail;
	optional string	cbc_Department;
	optional string	cbc_MarkAttention;
	optional string	cbc_MarkCare;
	optional string	cbc_PlotIdentification;
	optional string	cbc_CitySubdivisionName;
	optional string	cbc_CityName;
	optional string	cbc_PostalZone;
	optional string	cbc_CountrySubentity;
	optional string	cbc_CountrySubentityCode;
	optional string	cbc_Region;
	optional string	cbc_District;
	optional string	cbc_TimezoneOffset;
	optional List<Cac_AddressLine>	cac_AddressLine;
	optional Cac_Country	cac_Country;
	optional List<Cac_LocationCoordinate>	cac_LocationCoordinate;
}

struct Cac_AddressLine
{
	string	cbc_Line;
}

struct Cac_AllowanceCharge
{
	optional string	cbc_ID;
	string	cbc_ChargeIndicator;
	optional string	cbc_AllowanceChargeReasonCode;
	optional List<string>	cbc_AllowanceChargeReason;
	optional string	cbc_MultiplierFactorNumeric;
	optional string	cbc_PrepaidIndicator;
	optional string	cbc_SequenceNumeric;
	string	cbc_Amount;
	optional string	cbc_BaseAmount;
	optional string	cbc_AccountingCostCode;
	optional string	cbc_AccountingCost;
	optional string	cbc_PerUnitAmount;
	optional List<Cac_TaxCategory>	cac_TaxCategory;
	optional Cac_TaxTotal	cac_TaxTotal;
	optional List<Cac_PaymentMeans>	cac_PaymentMeans;
}

struct Cac_Attachment
{
	optional string	cbc_EmbeddedDocumentBinaryObject;
	optional Cac_ExternalReference	cac_ExternalReference;
}

struct Cac_BillingReference
{
	optional Cac_DocumentReference	cac_InvoiceDocumentReference;
	optional Cac_DocumentReference	cac_SelfBilledInvoiceDocumentReference;
	optional Cac_DocumentReference	cac_CreditNoteDocumentReference;
	optional Cac_DocumentReference	cac_SelfBilledCreditNoteDocumentReference;
	optional Cac_DocumentReference	cac_DebitNoteDocumentReference;
	optional Cac_DocumentReference	cac_ReminderDocumentReference;
	optional Cac_DocumentReference	cac_AdditionalDocumentReference;
	optional List<Cac_BillingReferenceLine>	cac_BillingReferenceLine;
}

struct Cac_BillingReferenceLine
{
	string	cbc_ID;
	optional string	cbc_Amount;
	optional List<Cac_AllowanceCharge>	cac_AllowanceCharge;
}

struct Cac_Branch
{
	optional string	cbc_ID;
	optional string	cbc_Name;
	optional Cac_FinancialInstitution	cac_FinancialInstitution;
	optional Cac_Address	cac_Address;
}

struct Cac_CardAccount
{
	string	cbc_PrimaryAccountNumberID;
	string	cbc_NetworkID;
	optional string	cbc_CardTypeCode;
	optional DateTime	cbc_ValidityStartDate;
	optional DateTime	cbc_ExpiryDate;
	optional string	cbc_IssuerID;
	optional string	cbc_IssueNumberID;
	optional string	cbc_CV2ID;
	optional string	cbc_CardChipCode;
	optional string	cbc_ChipApplicationID;
	optional string	cbc_HolderName;
}

struct Cac_Clause
{
	optional string	cbc_ID;
	optional List<string>	cbc_Content;
}

struct Cac_Communication
{
	optional string	cbc_ChannelCode;
	optional string	cbc_Channel;
	optional string	cbc_Value;
}

struct Cac_Contact
{
	optional string	cbc_ID;
	optional string	cbc_Name;
	optional string	cbc_Telephone;
	optional string	cbc_Telefax;
	optional string	cbc_ElectronicMail;
	optional List<string>	cbc_Note;
	optional List<Cac_Communication>	cac_OtherCommunication;
}

struct Cac_Contract
{
	optional string	cbc_ID;
	optional DateTime	cbc_IssueDate;
	optional DateTime	cbc_IssueTime;
	optional DateTime	cbc_NominationDate;
	optional DateTime	cbc_NominationTime;
	optional string	cbc_ContractTypeCode;
	optional string	cbc_ContractType;
	optional List<string>	cbc_Note;
	optional string	cbc_VersionID;
	optional List<string>	cbc_Description;
	optional Cac_Period	cac_ValidityPeriod;
	optional List<Cac_DocumentReference>	cac_ContractDocumentReference;
	optional Cac_Period	cac_NominationPeriod;
	optional Cac_Delivery	cac_ContractualDelivery;
}

struct Cac_Country
{
	optional string	cbc_IdentificationCode;
	optional string	cbc_Name;
}

struct Cac_CreditAccount
{
	string	cbc_AccountID;
}

struct Cac_Delivery
{
	optional string	cbc_ID;
	optional string	cbc_Quantity;
	optional string	cbc_MinimumQuantity;
	optional string	cbc_MaximumQuantity;
	optional DateTime	cbc_ActualDeliveryDate;
	optional DateTime	cbc_ActualDeliveryTime;
	optional DateTime	cbc_LatestDeliveryDate;
	optional DateTime	cbc_LatestDeliveryTime;
	optional string	cbc_ReleaseID;
	optional string	cbc_TrackingID;
	optional Cac_Address	cac_DeliveryAddress;
	optional string	cac_DeliveryLocationUdid; // optional Cac_Location
	optional string	cac_AlternativeDeliveryLocationUdid; // optional Cac_Location
	optional Cac_Period	cac_RequestedDeliveryPeriod;
	optional Cac_Period	cac_PromisedDeliveryPeriod;
	optional Cac_Period	cac_EstimatedDeliveryPeriod;
	optional string	cac_CarrierPartyUdid; // optional Cac_Party
	optional string	cac_DeliveryPartyUdid; // optional Cac_Party
	optional List<string>	cac_NotifyPartyUdid; // optional Cac_Party
	optional Cac_Despatch	cac_Despatch;
	optional List<Cac_DeliveryTerms>	cac_DeliveryTerms;
	optional Cac_DeliveryUnit	cac_MinimumDeliveryUnit;
	optional Cac_DeliveryUnit	cac_MaximumDeliveryUnit;
	optional string	cac_ShipmentUdid; // optional Cac_Shipment
}

struct Cac_DeliveryTerms
{
	optional string	cbc_ID;
	optional List<string>	cbc_SpecialTerms;
	optional string	cbc_LossRiskResponsibilityCode;
	optional List<string>	cbc_LossRisk;
	optional string	cbc_Amount;
	optional string	cac_DeliveryLocationUdid; // optional Cac_Location
	optional Cac_AllowanceCharge	cac_AllowanceCharge;
}

struct Cac_DeliveryUnit
{
	string	cbc_BatchQuantity;
	optional string	cbc_ConsumerUnitQuantity;
	optional string	cbc_HazardousRiskIndicator;
}

struct Cac_Despatch
{
	optional string	cbc_ID;
	optional DateTime	cbc_RequestedDespatchDate;
	optional DateTime	cbc_RequestedDespatchTime;
	optional DateTime	cbc_EstimatedDespatchDate;
	optional DateTime	cbc_EstimatedDespatchTime;
	optional DateTime	cbc_ActualDespatchDate;
	optional DateTime	cbc_ActualDespatchTime;
	optional DateTime	cbc_GuaranteedDespatchDate;
	optional DateTime	cbc_GuaranteedDespatchTime;
	optional string	cbc_ReleaseID;
	optional List<string>	cbc_Instructions;
	optional Cac_Address	cac_DespatchAddress;
	optional string	cac_DespatchLocationUdid; // optional Cac_Location
	optional string	cac_DespatchPartyUdid; // optional Cac_Party
	optional string	cac_CarrierPartyUdid; // optional Cac_Party
	optional List<string>	cac_NotifyPartyUdid; // optional Cac_Party
	optional Cac_Contact	cac_Contact;
	optional Cac_Period	cac_EstimatedDespatchPeriod;
	optional Cac_Period	cac_RequestedDespatchPeriod;
}

struct Cac_DocumentReference
{
	string	cbc_ID;
	optional string	cbc_CopyIndicator;
	optional string	cbc_UUID;
	optional DateTime	cbc_IssueDate;
	optional DateTime	cbc_IssueTime;
	optional string	cbc_DocumentTypeCode;
	optional string	cbc_DocumentType;
	optional List<string>	cbc_XPath;
	optional string	cbc_LanguageID;
	optional string	cbc_LocaleCode;
	optional string	cbc_VersionID;
	optional string	cbc_DocumentStatusCode;
	optional List<string>	cbc_DocumentDescription;
	optional Cac_Attachment	cac_Attachment;
	optional Cac_Period	cac_ValidityPeriod;
	optional string	cac_IssuerPartyUdid; // optional Cac_Party
	optional Cac_ResultOfVerification	cac_ResultOfVerification;
}

struct Cac_ExchangeRate
{
	string	cbc_SourceCurrencyCode;
	optional string	cbc_SourceCurrencyBaseRate;
	string	cbc_TargetCurrencyCode;
	optional string	cbc_TargetCurrencyBaseRate;
	optional string	cbc_ExchangeMarketID;
	optional string	cbc_CalculationRate;
	optional string	cbc_MathematicOperatorCode;
	optional DateTime	cbc_Date;
	optional Cac_Contract	cac_ForeignExchangeContract;
}

struct Cac_ExternalReference
{
	optional string	cbc_URI;
	optional string	cbc_DocumentHash;
	optional string	cbc_HashAlgorithmMethod;
	optional DateTime	cbc_ExpiryDate;
	optional DateTime	cbc_ExpiryTime;
	optional string	cbc_MimeCode;
	optional string	cbc_FormatCode;
	optional string	cbc_EncodingCode;
	optional string	cbc_CharacterSetCode;
	optional string	cbc_FileName;
	optional List<string>	cbc_Description;
}

struct Cac_FinancialAccount
{
	optional string	cbc_ID;
	optional string	cbc_Name;
	optional string	cbc_AliasName;
	optional string	cbc_AccountTypeCode;
	optional string	cbc_AccountFormatCode;
	optional string	cbc_CurrencyCode;
	optional List<string>	cbc_PaymentNote;
	optional Cac_Branch	cac_FinancialInstitutionBranch;
	optional Cac_Country	cac_Country;
}

struct Cac_FinancialInstitution
{
	optional string	cbc_ID;
	optional string	cbc_Name;
	optional Cac_Address	cac_Address;
}

struct Cac_Invoice
{
	optional string	cbc_UBLVersionID;
	optional string	cbc_CustomizationID;
	optional string	cbc_ProfileID;
	optional string	cbc_ProfileExecutionID;
	string	cbc_ID;
	optional string	cbc_CopyIndicator;
	optional string	cbc_UUID;
	DateTime	cbc_IssueDate;
	optional DateTime	cbc_IssueTime;
	optional DateTime	cbc_DueDate;
	optional string	cbc_InvoiceTypeCode;
	optional List<string>	cbc_Note;
	optional DateTime	cbc_TaxPointDate;
	optional string	cbc_DocumentCurrencyCode;
	optional string	cbc_TaxCurrencyCode;
	optional string	cbc_PricingCurrencyCode;
	optional string	cbc_PaymentCurrencyCode;
	optional string	cbc_PaymentAlternativeCurrencyCode;
	optional string	cbc_AccountingCostCode;
	optional string	cbc_AccountingCost;
	optional string	cbc_LineCountNumeric;
	optional string	cbc_BuyerReference;
	optional List<Cac_Period>	cac_InvoicePeriod;
	optional Cac_OrderReference	cac_OrderReference;
	optional List<Cac_BillingReference>	cac_BillingReference;
	optional List<Cac_DocumentReference>	cac_DespatchDocumentReference;
	optional List<Cac_DocumentReference>	cac_ReceiptDocumentReference;
	optional List<Cac_DocumentReference>	cac_StatementDocumentReference;
	optional List<Cac_DocumentReference>	cac_OriginatorDocumentReference;
	optional List<Cac_DocumentReference>	cac_ContractDocumentReference;
	optional List<Cac_DocumentReference>	cac_AdditionalDocumentReference;
	optional List<Cac_ProjectReference>	cac_ProjectReference;
	optional List<Cac_Signature>	cac_Signature;
	string	cac_AccountingSupplierPartyUdid; // Cac_SupplierParty
	string	cac_AccountingCustomerPartyUdid; // Cac_CustomerParty
	optional string	cac_PayeePartyUdid; // optional Cac_Party
	optional string	cac_BuyerCustomerPartyUdid; // optional Cac_CustomerParty
	optional string	cac_SellerSupplierPartyUdid; // optional Cac_SupplierParty
	optional string	cac_TaxRepresentativePartyUdid; // optional Cac_Party
	optional List<Cac_Delivery>	cac_Delivery;
	optional Cac_DeliveryTerms	cac_DeliveryTerms;
	optional List<Cac_PaymentMeans>	cac_PaymentMeans;
	optional List<Cac_PaymentTerms>	cac_PaymentTerms;
	optional List<Cac_Payment>	cac_PrepaidPayment;
	optional List<Cac_AllowanceCharge>	cac_AllowanceCharge;
	optional Cac_ExchangeRate	cac_TaxExchangeRate;
	optional Cac_ExchangeRate	cac_PricingExchangeRate;
	optional Cac_ExchangeRate	cac_PaymentExchangeRate;
	optional Cac_ExchangeRate	cac_PaymentAlternativeExchangeRate;
	optional List<Cac_TaxTotal>	cac_TaxTotal;
	optional List<Cac_TaxTotal>	cac_WithholdingTaxTotal;
	Cac_MonetaryTotal	cac_LegalMonetaryTotal;
	List<string>	cac_InvoiceLineUdid; // Cac_InvoiceLine
}

struct Cac_LocationCoordinate
{
	optional string	cbc_CoordinateSystemCode;
	optional string	cbc_LatitudeDegreesMeasure;
	optional string	cbc_LatitudeMinutesMeasure;
	optional string	cbc_LatitudeDirectionCode;
	optional string	cbc_LongitudeDegreesMeasure;
	optional string	cbc_LongitudeMinutesMeasure;
	optional string	cbc_LongitudeDirectionCode;
	optional string	cbc_AltitudeMeasure;
}

struct Cac_MonetaryTotal
{
	optional string	cbc_LineExtensionAmount;
	optional string	cbc_TaxExclusiveAmount;
	optional string	cbc_TaxInclusiveAmount;
	optional string	cbc_AllowanceTotalAmount;
	optional string	cbc_ChargeTotalAmount;
	optional string	cbc_PrepaidAmount;
	optional string	cbc_PayableRoundingAmount;
	string	cbc_PayableAmount;
	optional string	cbc_PayableAlternativeAmount;
}

struct Cac_OrderReference
{
	string	cbc_ID;
	optional string	cbc_SalesOrderID;
	optional string	cbc_CopyIndicator;
	optional string	cbc_UUID;
	optional DateTime	cbc_IssueDate;
	optional DateTime	cbc_IssueTime;
	optional string	cbc_CustomerReference;
	optional string	cbc_OrderTypeCode;
	optional Cac_DocumentReference	cac_DocumentReference;
}

struct Cac_Payment
{
	optional string	cbc_ID;
	optional string	cbc_PaidAmount;
	optional DateTime	cbc_ReceivedDate;
	optional DateTime	cbc_PaidDate;
	optional DateTime	cbc_PaidTime;
	optional string	cbc_InstructionID;
}

struct Cac_PaymentMandate
{
	optional string	cbc_ID;
	optional string	cbc_MandateTypeCode;
	optional string	cbc_MaximumPaymentInstructionsNumeric;
	optional string	cbc_MaximumPaidAmount;
	optional string	cbc_SignatureID;
	optional string	cac_PayerPartyUdid; // optional Cac_Party
	optional Cac_FinancialAccount	cac_PayerFinancialAccount;
	optional Cac_Period	cac_ValidityPeriod;
	optional Cac_Period	cac_PaymentReversalPeriod;
	optional List<Cac_Clause>	cac_Clause;
}

struct Cac_PaymentMeans
{
	optional string	cbc_ID;
	string	cbc_PaymentMeansCode;
	optional DateTime	cbc_PaymentDueDate;
	optional string	cbc_PaymentChannelCode;
	optional string	cbc_InstructionID;
	optional List<string>	cbc_InstructionNote;
	optional List<string>	cbc_PaymentID;
	optional Cac_CardAccount	cac_CardAccount;
	optional Cac_FinancialAccount	cac_PayerFinancialAccount;
	optional Cac_FinancialAccount	cac_PayeeFinancialAccount;
	optional Cac_CreditAccount	cac_CreditAccount;
	optional Cac_PaymentMandate	cac_PaymentMandate;
	optional Cac_TradeFinancing	cac_TradeFinancing;
}

struct Cac_PaymentTerms
{
	optional string	cbc_ID;
	optional List<string>	cbc_PaymentMeansID;
	optional string	cbc_PrepaidPaymentReferenceID;
	optional List<string>	cbc_Note;
	optional string	cbc_ReferenceEventCode;
	optional string	cbc_SettlementDiscountPercent;
	optional string	cbc_PenaltySurchargePercent;
	optional string	cbc_PaymentPercent;
	optional string	cbc_Amount;
	optional string	cbc_SettlementDiscountAmount;
	optional string	cbc_PenaltyAmount;
	optional string	cbc_PaymentTermsDetailsURI;
	optional DateTime	cbc_PaymentDueDate;
	optional DateTime	cbc_InstallmentDueDate;
	optional string	cbc_InvoicingPartyReference;
	optional Cac_Period	cac_SettlementPeriod;
	optional Cac_Period	cac_PenaltyPeriod;
	optional Cac_ExchangeRate	cac_ExchangeRate;
	optional Cac_Period	cac_ValidityPeriod;
}

struct Cac_Period
{
	optional DateTime	cbc_StartDate;
	optional DateTime	cbc_StartTime;
	optional DateTime	cbc_EndDate;
	optional DateTime	cbc_EndTime;
	optional string	cbc_DurationMeasure;
	optional List<string>	cbc_DescriptionCode;
	optional List<string>	cbc_Description;
}

struct Cac_ProjectReference
{
	string	cbc_ID;
	optional string	cbc_UUID;
	optional DateTime	cbc_IssueDate;
	optional List<Cac_WorkPhaseReference>	cac_WorkPhaseReference;
}

struct Cac_ResultOfVerification
{
	optional string	cbc_ValidatorID;
	optional string	cbc_ValidationResultCode;
	optional DateTime	cbc_ValidationDate;
	optional DateTime	cbc_ValidationTime;
	optional string	cbc_ValidateProcess;
	optional string	cbc_ValidateTool;
	optional string	cbc_ValidateToolVersion;
	optional string	cac_SignatoryPartyUdid; // optional Cac_Party
}

struct Cac_Signature
{
	string	cbc_ID;
	optional List<string>	cbc_Note;
	optional DateTime	cbc_ValidationDate;
	optional DateTime	cbc_ValidationTime;
	optional string	cbc_ValidatorID;
	optional string	cbc_CanonicalizationMethod;
	optional string	cbc_SignatureMethod;
	optional string	cac_SignatoryPartyUdid; // optional Cac_Party
	optional Cac_Attachment	cac_DigitalSignatureAttachment;
	optional Cac_DocumentReference	cac_OriginalDocumentReference;
}

struct Cac_TaxCategory
{
	optional string	cbc_ID;
	optional string	cbc_Name;
	optional string	cbc_Percent;
	optional string	cbc_BaseUnitMeasure;
	optional string	cbc_PerUnitAmount;
	optional string	cbc_TaxExemptionReasonCode;
	optional List<string>	cbc_TaxExemptionReason;
	optional string	cbc_TierRange;
	optional string	cbc_TierRatePercent;
	Cac_TaxScheme	cac_TaxScheme;
}

struct Cac_TaxScheme
{
	optional string	cbc_ID;
	optional string	cbc_Name;
	optional string	cbc_TaxTypeCode;
	optional string	cbc_CurrencyCode;
	optional List<Cac_Address>	cac_JurisdictionRegionAddress;
}

struct Cac_TaxSubtotal
{
	optional string	cbc_TaxableAmount;
	string	cbc_TaxAmount;
	optional string	cbc_CalculationSequenceNumeric;
	optional string	cbc_TransactionCurrencyTaxAmount;
	optional string	cbc_Percent;
	optional string	cbc_BaseUnitMeasure;
	optional string	cbc_PerUnitAmount;
	optional string	cbc_TierRange;
	optional string	cbc_TierRatePercent;
	Cac_TaxCategory	cac_TaxCategory;
}

struct Cac_TaxTotal
{
	string	cbc_TaxAmount;
	optional string	cbc_RoundingAmount;
	optional string	cbc_TaxEvidenceIndicator;
	optional string	cbc_TaxIncludedIndicator;
	optional List<Cac_TaxSubtotal>	cac_TaxSubtotal;
}

struct Cac_TradeFinancing
{
	optional string	cbc_ID;
	optional string	cbc_FinancingInstrumentCode;
	optional Cac_DocumentReference	cac_ContractDocumentReference;
	optional List<Cac_DocumentReference>	cac_DocumentReference;
	string	cac_FinancingPartyUdid; // Cac_Party
	optional Cac_FinancialAccount	cac_FinancingFinancialAccount;
	optional List<Cac_Clause>	cac_Clause;
}

struct Cac_WorkPhaseReference
{
	optional string	cbc_ID;
	optional string	cbc_WorkPhaseCode;
	optional List<string>	cbc_WorkPhase;
	optional string	cbc_ProgressPercent;
	optional DateTime	cbc_StartDate;
	optional DateTime	cbc_EndDate;
	optional List<Cac_DocumentReference>	cac_WorkOrderDocumentReference;
}

