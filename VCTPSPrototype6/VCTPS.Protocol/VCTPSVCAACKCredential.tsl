// Secure Verifiable Credential Transport Protocol (VCTPS)
// Verifiable Capability Authorization-based Verifiable Credential Exchange Protocol over DIDCOMM
// - using the .NET version of the https://github.com/trinsic-id/okapi/tree/main/dotnet Okapi DID libraries
//   and the Microsoft "Trinity" Graph Engine object platform
//
// BlueToque Tools, Trusted Digital Web Project, Hyperonomy Digital Identity Lab, Parallelspace Corporation
// http://hyperonomy.com
// (c) Copyright 2022. Parallelspace Corporation, Bindloss, Alberta, Canada

include "../VCTPS.Common/BTTGenericCredential.tsl";

enum VCTPS_VCAACK_Determination
{
	accepted,
	rejected
}

struct VCTPS_VCAACK_Acknowledgement
{
	string id;
	string determination;	// VCTPS_VCAACK_Determination.ToString()
	string vca64;
}

struct VCTPS_VCAACK_Claims
{
	string vcatype;			// VCTPS_VCA_Types.ToString()
	string parent;
	string subject;
	string acknowledgementkey;
	VCTPS_VCAACK_Acknowledgement ack;
}

struct VCTPS_VCAACK_EnvelopeContent
{
	string udid;
	List<string>                        context;
	optional string                     credentialsubjectudid;	// bound credential
	optional VCTPS_VCAACK_Claims        claims;
	optional BTTEncryptedClaims         encryptedclaims;
}

struct VCTPS_VCAACK_Envelope
{
	string                              udid;					// same value as content.udid
    BTTGenericCredential_PackingLabel   label;
	VCTPS_VCAACK_EnvelopeContent        content;
}

struct VCTPS_VCAACK_SealedEnvelope
{
	VCTPS_VCAACK_Envelope               envelope;
	BTTGenericCredential_EnvelopeSeal   proof;
}
